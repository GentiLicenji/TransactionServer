/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.sisal.transaction.server.controller;

import com.sisal.transaction.server.delegate.TransactionApiDelegate;
import com.sisal.transaction.server.model.rest.ErrorResponse;
import com.sisal.transaction.server.model.rest.TransactionRequest;
import com.sisal.transaction.server.model.rest.TransactionResponse;
import io.swagger.annotations.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.validation.Valid;

@javax.annotation.Generated(value = "com.glic.GentiSpringCodegen", date = "2025-02-20T13:46:50.094+01:00")

@Validated
@RestController
@Api(value = "transactionApi", description = "Group of APIs providing transaction operations.", tags = {"Transactions"})
public class TransactionApiController {
    private final TransactionApiDelegate transactionApiDelegate;

    @Autowired
    public TransactionApiController(TransactionApiDelegate apiDelegate) {
        this.transactionApiDelegate = apiDelegate;
    }

    @ApiOperation(value = "Create a new transaction", nickname = "createTransaction", notes = "API will handle the creation of financial transactions, enforce specific business rules, and implement a custom authentication mechanism ", response = TransactionResponse.class, authorizations = {
            @Authorization(value = "HmacAuth")
    }, tags = {"Transactions",})
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "Transaction created successfully.", response = TransactionResponse.class),
            @ApiResponse(code = 400, message = "Bad request from client, check request body for errors.", response = ErrorResponse.class),
            @ApiResponse(code = 401, message = "Unauthorized - Authentication failed.", response = ErrorResponse.class),
            @ApiResponse(code = 403, message = "Forbidden request - Server refuses to fulfill the request.", response = ErrorResponse.class),
            @ApiResponse(code = 404, message = "The specified resource was not found.", response = ErrorResponse.class),
            @ApiResponse(code = 500, message = "Server errors.", response = ErrorResponse.class),
            @ApiResponse(code = 503, message = "Service Unavailable.", response = ErrorResponse.class)})
    @RequestMapping(value = "/api/transactions",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    public ResponseEntity<TransactionResponse> createTransaction(@ApiParam(value = "Transaction object that needs to be created.", required = true) @Valid @RequestBody TransactionRequest transactionRequest) {
        return transactionApiDelegate.createTransaction(transactionRequest);
    }

}
